{#
This file is part of EC-CUBE

Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.

http://www.ec-cube.co.jp/

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% extends 'default_frame.twig' %}

{% set body_class = 'product_page' %}

{% block javascript %}
    <script>
        eccube.classCategories = {{ class_categories_as_json(Product)|raw }};

        // 規格2に選択肢を割り当てる。
        function fnSetClassCategories(form, classcat_id2_selected) {
            var $form = $(form);
            var product_id = $form.find('input[name=product_id]').val();
            var $sele1 = $form.find('select[name=classcategory_id1]');
            var $sele2 = $form.find('select[name=classcategory_id2]');
            eccube.setClassCategories($form, product_id, $sele1, $sele2, classcat_id2_selected);
        }

        {% if form.classcategory_id2 is defined %}
        fnSetClassCategories(
            $('#form1'), {{ form.classcategory_id2.vars.value|json_encode|raw }}
        );
        {% elseif form.classcategory_id1 is defined %}
        eccube.checkStock($('#form1'), {{ Product.id }}, {{ form.classcategory_id1.vars.value|json_encode|raw }}, null);
        {% endif %}
    </script>

    <script>
        $(function() {
            $('.add-cart').on('click', function(event) {
                {% if form.classcategory_id1 is defined %}
                // 規格1フォームの必須チェック
                if ($('#classcategory_id1').val() == '__unselected' || $('#classcategory_id1').val() == '') {
                    $('#classcategory_id1')[0].setCustomValidity('{{ '項目が選択されていません'|trans }}');
                    return true;
                } else {
                    $('#classcategory_id1')[0].setCustomValidity('');
                }
                {% endif %}

                {% if form.classcategory_id2 is defined %}
                // 規格2フォームの必須チェック
                if ($('#classcategory_id2').val() == '__unselected' || $('#classcategory_id2').val() == '') {
                    $('#classcategory_id2')[0].setCustomValidity('{{ '項目が選択されていません'|trans }}');
                    return true;
                } else {
                    $('#classcategory_id2')[0].setCustomValidity('');
                }
                {% endif %}

                // 個数フォームのチェック
                if ($('#quantity').val() < 1) {
                    $('#quantity')[0].setCustomValidity('{{ '1以上で入力してください。'|trans }}');
                    return true;
                } else {
                    $('#quantity')[0].setCustomValidity('');
                }

                event.preventDefault();
                $form = $('#form1');
                $.ajax({
                    url: $form.attr('action'),
                    type: $form.attr('method'),
                    data: $form.serialize(),
                    dataType: 'json',
                    beforeSend: function(xhr, settings) {
                        // Buttonを無効にする
                        $('.add-cart').prop('disabled', true);
                    }
                }).done(function(data) {
                    // レスポンス内のメッセージをalertで表示
                    $.each(data.messages, function() {
                        $('#ec-modal-header').html(this);
                    });

                    $('.ec-modal').show()

                    // カートブロックを更新する
                    $.ajax({
                        url: "{{ url('block_cart') }}",
                        type: 'GET',
                        dataType: 'html'
                    }).done(function(html) {
                        $('.ec-headerRole__cart').html(html);
                    });
                }).fail(function(data) {
                    alert('{{ 'カートへの追加に失敗しました。'|trans }}');
                }).always(function(data) {
                    // Buttonを有効にする
                    $('.add-cart').prop('disabled', false);
                });
            });
        });

        $('.ec-modal-wrap').on('click', function(e) {
            // モーダル内の処理は外側にバブリングさせない
            e.stopPropagation();
        });
        $('.ec-modal-overlay, .ec-modal, .ec-modal-close, .ec-inlineBtn--cancel').on('click', function() {
            $('.ec-modal').hide()
        });
    </script>
    <script type="application/ld+json">
    {
        "@context": "https://schema.org/",
        "@type": "Product",
        "name": "{{ Product.name }}",
        "image": [
            {% for img in Product.ProductImage %}
                "{{ app.request.schemeAndHttpHost }}{{ asset(img, 'save_image') }}"{% if not loop.last %},{% endif %}

            {% else %}
                "{{ app.request.schemeAndHttpHost }}{{ asset(''|no_image_product, 'save_image') }}"
            {% endfor %}
        ],
        "description": "{{ Product.description_list | default(Product.description_detail) | replace({'\n': '', '\r': ''}) | slice(0,300) }}",
        {% if Product.code_min %}
        "sku": "{{ Product.code_min }}",
        {% endif %}
        "offers": {
            "@type": "Offer",
            "url": "{{ url('product_detail', {'id': Product.id}) }}",
            "priceCurrency": "{{ eccube_config.currency }}",
            "price": {{ Product.getPrice02IncTaxMin }},
            "availability": "{{ Product.stock_find ? "InStock" : "OutOfStock" }}"
        }
    }
    </script>

	{# 数量の増減ボタン #}
	<script type="text/javascript">
		jQuery(function($){
			$(".ec-productRole .quantity").after('<span id="add1" class="plus">＋</span>').before('<span id="minus1" class="minus">－</span>');
			$(".plus").click(function(){
				var currentVal = parseInt(jQuery(this).prev(".ec-productRole .quantity").val());
				if (!currentVal || currentVal=="" || currentVal == "NaN") currentVal = 0;
				$(this).prev(".ec-productRole .quantity").val(currentVal + 1);
			});
			$(".minus").click(function(){
				var currentVal = parseInt(jQuery(this).next(".ec-productRole .quantity").val());
				if (currentVal == "NaN") currentVal = 0;
				if (currentVal > 0) {
					$(this).next(".ec-productRole .quantity").val(currentVal - 1);
				}
			});
		});
    </script>

    <!-- ▼jquery.zoom -->
    <script src="{{ asset('assets/js/jquery.zoom/jquery.zoom.min.js') }}"></script>
	<script>
		$(function () {
			var ua = navigator.userAgent;
			if (ua.indexOf('iPhone') > 0 || ua.indexOf('Android') > 0 && ua.indexOf('Mobile') > 0) {
			} else if (ua.indexOf('iPad') > 0 || ua.indexOf('Android') > 0) {
			} else {
				{% for ProductImage in Product.ProductImage %}
					$(document).ready(function(){
						$('#ex{{ loop.index }}').zoom();
					});
				{% endfor %}
			}
		})
	</script>
{% endblock %}

{% block main %}
    <div class="ec-productRole">
		{# 商品名 #}
		<div class="ec-productRole__title sp">
			<h2 class="ec-headingTitle">{{ Product.name }}</h2>
		</div>
        <div class="ec-grid2">
            <div class="ec-grid2__cell left">
                {# 商品画像 #}
                <div class="ec-sliderItemRole">
                    {# ■サムネイルの横並び→detail_imagetype1.twig　■サムネイルのスライド→detail_imagetype2.twig #}
                    {{ include('Product/detail_imagetype2.twig') }}
                </div>
            </div>
			<div class="ec-grid2__cell right">
                <div class="ec-productRole__profile">
                    {# 商品名 #}
                    <div class="ec-productRole__title pc">
                        <h2 class="ec-headingTitle">{{ Product.name }}</h2>
                    </div>
                    {# タグ #}
                    {% if Product.Tags is not empty %}
                        <ul class="ec-productRole__tags">
                            {% for Tag in Product.Tags %}
                                <li class="ec-productRole__tag tag_{{ Tag.id }}">{{ Tag }}</li>
                            {% endfor %}
                        </ul>
                    {% endif %}
                    {# 通常価格 #}
                    {% if Product.hasProductClass -%}
                        <div class="ec-productRole__priceRegular">
                            {% if Product.getPrice01Min is not null and Product.getPrice01IncTaxMin == Product.getPrice01IncTaxMax %}
                                <span class="ec-productRole__priceRegularPrice">{{ '通常価格'|trans }}：<span class="price01-default">{{ Product.getPrice01IncTaxMin|price }}</span></span>
                                <span class="ec-productRole__priceRegularTax">{{ '税込'|trans }}</span>
                            {% elseif Product.getPrice01Min is not null and Product.getPrice01Max is not null %}
                                <span class="ec-productRole__priceRegularPrice">{{ '通常価格'|trans }}：<span class="price01-default">{{ Product.getPrice01IncTaxMin|price }}～{{ Product.getPrice01IncTaxMax|price }}</span></span>
                                <span class="ec-productRole__priceRegularTax">{{ '税込'|trans }}</span>
                            {% endif %}
                        </div>
                    {% else %}
                        {% if Product.getPrice01Max is not null %}
                            <span class="ec-productRole__priceRegularPrice">{{ '通常価格'|trans }}：{{ Product.getPrice01IncTaxMin|price }}</span>
                            <span class="ec-productRole__priceRegularTax">{{ '税込'|trans }}</span>
                        {% endif %}
                    {% endif %}
                    {# 販売価格 #}
                    <div class="ec-productRole__price">
                        {% if Product.hasProductClass -%}
                            {% if Product.getPrice02IncTaxMin == Product.getPrice02IncTaxMax %}
                                <div class="ec-price">
                                    <span class="ec-price__price price02-default">{{ Product.getPrice02IncTaxMin|price }}</span>
                                    <span class="ec-price__tax">{{ '税込'|trans }}</span>
                                </div>
                            {% else %}
                                <div class="ec-price">
                                    <span class="ec-price__price price02-default">{{ Product.getPrice02IncTaxMin|price }}～{{ Product.getPrice02IncTaxMax|price }}</span>
                                    <span class="ec-price__tax">{{ '税込'|trans }}</span>
                                </div>
                            {% endif %}
                        {% else %}
                            <div class="ec-price">
                                <span class="ec-price__price">{{ Product.getPrice02IncTaxMin|price }}</span>
                                <span class="ec-price__tax">{{ '税込'|trans }}</span>
                            </div>
                        {% endif %}
                    </div>
                    {# 商品コード #}
                    {% if Product.code_min is not empty %}
                        <div class="ec-productRole__code">
                            {{ '商品コード'|trans }}： <span class="product-code-default">{{ Product.code_min }}{% if Product.code_min != Product.code_max %}～{{ Product.code_max }}{% endif %}</span>
                        </div>
                    {% endif %}
                    
                    <div class="line"></div>
                    
                    <form action="{{ url('product_add_cart', {id:Product.id}) }}" method="post" id="form1" name="form1">
                        {% if Product.stock_find %}
                            <div class="ec-productRole__actions">
                                {% if form.classcategory_id1 is defined %}
                                    <div class="ec-select">
                                        {{ form_widget(form.classcategory_id1) }}
                                        {{ form_errors(form.classcategory_id1) }}
                                    </div>
                                    {% if form.classcategory_id2 is defined %}
                                        <div class="ec-select">
                                            {{ form_widget(form.classcategory_id2) }}
                                            {{ form_errors(form.classcategory_id2) }}
                                        </div>
                                    {% endif %}
                                {% endif %}
                                <div class="ec-numberInput">
                                    {{ form_widget(form.quantity, {'attr': {'class': 'quantity'}}) }}
                                    {{ form_errors(form.quantity) }}
                                </div>
                            </div>
                            <div class="ec-productRole__btn">
                                <button type="submit" class="ec-blockBtn--action add-cart">
                                    <i class="fas fa-shopping-cart"></i> {{ 'カートに入れる'|trans }}
                                </button>
                            </div>
                        {% else %}
                            <div class="ec-productRole__btn">
                                <button type="button" class="ec-blockBtn--action" disabled="disabled">
                                    {{ 'ただいま品切れ中です。'|trans }}
                                </button>
                            </div>
                        {% endif %}

                        {{ form_rest(form) }}
                    </form>
                    
                    <div class="favorite_area">
                    {% if BaseInfo.option_favorite_product %}
                        <form action="{{ url('product_add_favorite', {id:Product.id}) }}" method="post">
							{% if is_favorite == false %}
								<button type="submit" id="favorite" class="ec-blockBtn--white">
									<i class="far fa-heart"></i> {{ 'この商品をお気に入りに追加'|trans }}
								</button>
							{% else %}
								<button type="submit" id="favorite" class="ec-blockBtn--white" disabled="disabled">
									<i class="fas fa-heart"></i> {{ 'お気に入りに追加済です。'|trans }}
								</button>
							{% endif %}
                        </form>
                    {% endif %}
                    </div>
                    
                    {# 関連カテゴリ #}
                    {% if Product.ProductCategories is not empty %}
                        <div class="ec-productRole__category">
                            <div class="title">{{ '関連カテゴリ'|trans }}</div>
                            {% for ProductCategory in Product.ProductCategories %}
                                <ul>
                                    <li>
                                        {% for Category in ProductCategory.Category.path %}
                                            <a href="{{ url('product_list') }}?category_id={{ Category.id }}">{{ Category.name }}</a> {%- if loop.last == false %}
                                            <span>＞</span>{% endif -%}
                                        {% endfor %}
                                    </li>
                                </ul>
                            {% endfor %}
                        </div>
                    {% endif %}
                    
                    {# 商品説明 表示位置① #}

                </div>
            </div>
            
			<div class="ec-modal">
				<div class="ec-modal-overlay">
					<div class="ec-modal-wrap">
						<span class="ec-modal-close"><span class="ec-icon"><img src="{{ asset('assets/icon/cross-dark.svg') }}" alt=""/></span></span>
						<div id="ec-modal-header" class="text-center">{{ 'カートに追加しました。'|trans }}</div>
						<div class="ec-modal-box">
							<div class="ec-role">
								<span class="ec-inlineBtn--cancel">{{ 'お買い物を続ける'|trans }}</span>
								<a href="{{ url('cart') }}" class="ec-inlineBtn--action">{{ 'カートへ進む'|trans }}</a>
							</div>
						</div>
					</div>
				</div>
			</div>
            
        </div>


		{# 商品説明 表示位置② #}
		<div class="ec-productRole__description description">
			{{ Product.description_detail|raw|nl2br }}
		</div>

        {# フリーエリア #}
        {% if Product.freearea %}
			<div class="ec-productRole__description freearea">
                 {{ include(template_from_string(Product.freearea)) }}
            </div>
        {% endif %}
    </div>
{% endblock %}
